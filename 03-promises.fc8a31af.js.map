{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFG,YAAW,KACTL,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHO,YAAW,KACTJ,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,GAEVA,EAAM,G,CA5CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMC,EAAWF,EAAEG,cAEbC,EAAaF,EAASG,SAAShB,MAAMiB,MACrCC,EAAYC,SAASN,EAASG,SAASI,KAAKH,OAC5CI,EAAcF,SAASN,EAASG,SAASM,OAAOL,OAE5C,IAAIhB,SAAQ,CAACC,EAASC,KAC9BI,YAAW,KACTL,GAAS,GACRa,EAAW,IAGdQ,MAAK,KACLC,EAAA5B,GAAS6B,OAAOC,KAAK,WAEnB,IAAG,IAAIC,EAAI,EAAGA,GAAKN,EAAaM,IAChC7B,EAAc6B,EAAGT,EAAYS,GAC1BJ,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOG,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOK,QAAQ,sBAAoB/B,QAAeC,MAAU,GACrE,GAEN","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const thisForm = e.currentTarget;\n\n  const delayInput = thisForm.elements.delay.value;\n  const stepInput = parseInt(thisForm.elements.step.value);\n  const amountInput = parseInt(thisForm.elements.amount.value);\n\n  const p = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, delayInput);\n  });\n\n  p.then(() => {\n    Notiflix.Notify.info(`✅ Start`);\n\n    for (let i = 1; i <= amountInput; i++) {\n      createPromise(i, stepInput * i)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }); \n    }\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        setTimeout(() => {\n          resolve({ position, delay });\n        }, delay);\n      } else {\n        setTimeout(() => {\n          reject({ position, delay });\n        }, delay);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","thisForm","currentTarget","delayInput","elements","value","stepInput","parseInt","step","amountInput","amount","then","$parcel$interopDefault","Notify","info","i","success","catch","failure"],"version":3,"file":"03-promises.fc8a31af.js.map"}