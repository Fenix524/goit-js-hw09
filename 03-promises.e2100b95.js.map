{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFG,YAAW,WACTL,EAAQ,CAAEH,WAAUC,S,GACnBA,GAEHO,YAAW,WACTJ,EAAO,CAAEJ,WAAUC,S,GAClBA,E,GAEJA,E,IA5CMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBACF,IAAMC,EAAWF,EAAEG,cAEbC,EAAaF,EAASG,SAAShB,MAAMiB,MACrCC,EAAYC,SAASN,EAASG,SAASI,KAAKH,OAC5CI,EAAcF,SAASN,EAASG,SAASM,OAAOL,OAE5C,IAAIhB,SAAQ,SAACC,EAASC,GAC9BI,YAAW,WACTL,G,GACCa,E,IAGHQ,MAAK,WACLC,EAAA5B,GAAS6B,OAAOC,KAAM,WAEpB,IAAG,IAAIC,EAAI,EAAGA,GAAKN,EAAaM,IAChC7B,EAAc6B,EAAGT,EAAYS,GAC1BJ,MAAK,SAAAK,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBwB,EAAA5B,GAAS6B,OAAOI,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvE+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBwB,EAAA5B,GAAS6B,OAAOO,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const thisForm = e.currentTarget;\n\n  const delayInput = thisForm.elements.delay.value;\n  const stepInput = parseInt(thisForm.elements.step.value);\n  const amountInput = parseInt(thisForm.elements.amount.value);\n\n  const p = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, delayInput);\n  });\n\n  p.then(() => {\n    Notiflix.Notify.info(`✅ Start`);\n\n    for (let i = 1; i <= amountInput; i++) {\n      createPromise(i, stepInput * i)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }); \n    }\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        setTimeout(() => {\n          resolve({ position, delay });\n        }, delay);\n      } else {\n        setTimeout(() => {\n          reject({ position, delay });\n        }, delay);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","thisForm","currentTarget","delayInput","elements","value","stepInput","parseInt","step","amountInput","amount","then","$parcel$interopDefault","Notify","info","i","param","success","concat","catch","failure"],"version":3,"file":"03-promises.e2100b95.js.map"}